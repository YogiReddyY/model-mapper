plugins {
    id 'java'
}

ext {
    lombokVersion = '1.18.10'
    manifoldVersion = '2019.1.32'

    sonatypeUsername = ''
    sonatypePassword = ''
    groupName = 'com.github.eye2web'
    artifactIdentifier = 'model-mapper'
    projectVersion = '1.0.0'
}


group groupName
version projectVersion

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

dependencies {
    implementation 'systems.manifold:manifold-ext:2019.1.32',
            "org.projectlombok:lombok:$lombokVersion",\
            'org.apache.commons:commons-lang3:3.9'

    testCompile 'junit:junit:4.12',
            'org.mockito:mockito-all:1.10.19',
            "systems.manifold:manifold-ext:$manifoldVersion"

    annotationProcessor "org.projectlombok:lombok:$lombokVersion",
            "systems.manifold:manifold-ext:$manifoldVersion"

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion",
            "systems.manifold:manifold-ext:$manifoldVersion"

}

tasks.withType(JavaCompile) {
    // If you DO NOT define a module-info.java file:
    options.compilerArgs += ['-Xplugin:Manifold']
}

test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    sign configurations.archives
}


wrapper {
    gradleVersion = '6.0.1'
}

publishing {

    publications {
        mavenJava(MavenPublication) {

            pom {
                name = 'Modelmapper'
                description = 'Map DTO and model objects using advanced options'
                url = 'https://github.com/eye2web/model-mapper'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Eye2web'
                        name = 'Remco van der Heijden'
                        email = 'remcovanderheijden@hotmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/eye2web/model-mapper.git'
                    developerConnection = 'scm:git:ssh://github.com/eye2web/model-mapper.git'
                    url = 'https://github.com/eye2web/model-mapper'
                }
            }

            groupId groupName
            artifactId artifactIdentifier
            version projectVersion

            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }

        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava11Compatible()) {
        options.addBooleanOption('html4', true)
    }
}